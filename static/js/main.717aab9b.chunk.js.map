{"version":3,"sources":["actions/todos.js","components/TodoInput.js","components/TodoList.js","App.js","reducers/todo.js","reducers/index.js","configureStore.js","reportWebVitals.js","index.js"],"names":["ADD_TODO","TOGGLE_TODO","DELETE_TODO","TodoInput","dispatch","useDispatch","todo","setTodo","useState","_jsxs","Form","initialValues","remember","name","onFinish","values","trim","type","payload","addTodoAction","id","uuid","complete","onFinishFailed","errorInfo","console","log","children","_jsx","Item","label","rules","message","Input","onChange","_ref","target","value","Button","htmlType","TodoList","todos","useSelector","state","List","dataSource","renderItem","actions","Tooltip","title","icon","DeleteOutlined","onClick","shape","Meta","avatar","Checkbox","checked","Typography","Text","delete","App","style","maxWidth","margin","initialState","arguments","length","undefined","map","filter","createRootReducer","history","combineReducers","router","connectRouter","createBrowserHistory","middleware","logger","thunk","routerMiddleware","composedEnhancers","compose","applyMiddleware","createStore","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","React","StrictMode","Provider","store","ConnectedRouter","document","getElementById"],"mappings":"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","file":"static/js/main.717aab9b.chunk.js","sourcesContent":["export const ADD_TODO = \"ADD_TODO\";\nexport const TOGGLE_TODO = \"TOGGLE_TODO\";\nexport const DELETE_TODO = \"DELETE_TODO\";\n\nexport const addTodoAction = todo => ({\n  type: ADD_TODO,\n  payload: todo,\n});\n\nexport const toggleTodoAction = todoId => ({\n  type: TOGGLE_TODO,\n  payload: todoId,\n});\n\nexport const deleteTodoAction = todoId => ({\n  type: DELETE_TODO,\n  payload: todoId,\n});\n","import React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { v4 as uuid } from \"uuid\";\nimport { Form, Input, Button } from \"antd\";\nimport { addTodoAction } from \"../actions/todos\";\n\nconst TodoInput = () => {\n  const dispatch = useDispatch();\n  const [todo, setTodo] = useState(\"\");\n\n  return (\n    <Form\n      initialValues={{\n        remember: true,\n      }}\n      name=\"basic\"\n      onFinish={values => {\n        const isTodoBlank = todo.trim() === \"\";\n\n        if (isTodoBlank) {\n          return;\n        }\n\n        dispatch(\n          addTodoAction({\n            id: uuid(),\n            name: values.todo,\n            complete: false,\n          })\n        );\n\n        setTodo(\"\");\n      }}\n      onFinishFailed={errorInfo => {\n        // eslint-disable-next-line no-console\n        console.log(\"Failed:\", errorInfo);\n      }}\n    >\n      <Form.Item\n        label=\"Todo\"\n        name=\"todo\"\n        rules={[\n          {\n            message: \"Add a todo\",\n          },\n        ]}\n      >\n        <Input\n          onChange={({ target }) => {\n            setTodo(target.value);\n          }}\n          value={todo}\n        />\n      </Form.Item>\n\n      <Form.Item>\n        <Button htmlType=\"submit\" type=\"primary\">\n          Submit\n        </Button>\n      </Form.Item>\n    </Form>\n  );\n};\n\nexport default TodoInput;\n","import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { List, Tooltip, Button, Checkbox, Typography } from \"antd\";\nimport { DeleteOutlined } from \"@ant-design/icons\";\n\nimport { toggleTodoAction, deleteTodoAction } from \"../actions/todos\";\n\nconst TodoList = () => {\n  const { todos } = useSelector(state => {\n    return state.todos;\n  });\n\n  const dispatch = useDispatch();\n\n  return (\n    <List\n      dataSource={todos}\n      renderItem={({ id, complete, name }) => (\n        <List.Item\n          actions={[\n            <Tooltip title=\"delete\">\n              <Button\n                icon={<DeleteOutlined />}\n                onClick={() => {\n                  dispatch(deleteTodoAction(id));\n                }}\n                shape=\"circle\"\n                type=\"danger\"\n              />\n            </Tooltip>,\n          ]}\n        >\n          <List.Item.Meta\n            avatar={\n              <Checkbox\n                checked={complete}\n                onChange={() => {\n                  dispatch(toggleTodoAction(id));\n                }}\n              />\n            }\n            title={<Typography.Text delete={complete}>{name}</Typography.Text>}\n          />\n        </List.Item>\n      )}\n    />\n  );\n};\n\nexport default TodoList;\n","import React from \"react\";\n\n// Inputs\nimport TodoInput from \"./components/TodoInput\";\nimport TodoList from \"./components/TodoList\";\n\nconst App = () => {\n  return (\n    <div\n      style={{\n        maxWidth: 650,\n        margin: \"200px auto\",\n      }}\n    >\n      <TodoInput />\n      <TodoList />\n    </div>\n  );\n};\n\nexport default App;\n","import { v4 as uuid } from \"uuid\";\nimport { ADD_TODO, TOGGLE_TODO, DELETE_TODO } from \"../actions/todos\";\n\nconst initialState = {\n  todos: [\n    {\n      id: uuid(),\n      name: \"Read a bit\",\n      complete: true,\n    },\n    {\n      id: uuid(),\n      name: \"Do laundry\",\n      complete: false,\n    },\n  ],\n};\n\nconst todos = (state = initialState, { payload, type }) => {\n  switch (type) {\n    case ADD_TODO:\n      return {\n        ...state,\n        todos: [...state.todos, payload],\n      };\n    case TOGGLE_TODO:\n      return {\n        ...state,\n        todos: state.todos.map(todo =>\n          todo.id === payload ? { ...todo, complete: !todo.complete } : todo\n        ),\n      };\n    case DELETE_TODO:\n      return {\n        ...state,\n        todos: state.todos.filter(todo => todo.id !== payload),\n      };\n    default:\n      return state;\n  }\n};\n\nexport default todos;\n","import { combineReducers } from \"redux\";\nimport { connectRouter } from \"connected-react-router\";\n\n// Reducers\nimport todos from \"./todo\";\n\nconst createRootReducer = history =>\n  combineReducers({\n    router: connectRouter(history),\n    todos,\n  });\n\nexport default createRootReducer;\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport logger from \"redux-logger\";\nimport { createBrowserHistory } from \"history\";\n\nimport { routerMiddleware } from \"connected-react-router\";\nimport thunk from \"redux-thunk\";\n\nimport createRootReducer from \"./reducers\";\n\nexport const history = createBrowserHistory();\n\nconst initialState = {};\n\nconst enhancers = [];\nconst middleware = [logger, thunk, routerMiddleware(history)];\n\nif (process.env.NODE_ENV === \"development\") {\n  // eslint-disable-next-line no-underscore-dangle\n  const devToolsExtension = window.__REDUX_DEVTOOLS_EXTENSION__;\n\n  if (typeof devToolsExtension === \"function\") {\n    enhancers.push(devToolsExtension());\n  }\n}\n\nconst composedEnhancers = compose(applyMiddleware(...middleware), ...enhancers);\n\nexport default createStore(\n  createRootReducer(history), // root reducer with router state\n  initialState,\n  composedEnhancers\n);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { ConnectedRouter } from \"connected-react-router\";\nimport App from \"./App\";\nimport store, { history } from \"./configureStore\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"antd/dist/antd.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider {...{ store }}>\n      <ConnectedRouter {...{ history }}>\n        <App />\n      </ConnectedRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}